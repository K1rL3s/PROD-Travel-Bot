"""notes

Revision ID: 0003
Revises: 0002
Create Date: 2024-03-19 00:21:01.255443

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0003"
down_revision: Union[str, None] = "0002"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("notes", sa.Column("creator_id", sa.BigInteger(), nullable=False))
    op.add_column("notes", sa.Column("title", sa.String(length=64), nullable=False))
    op.add_column(
        "notes", sa.Column("document_id", sa.String(length=128), nullable=False)
    )
    op.drop_constraint("fk_notes_owner_id_users", "notes", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_notes_creator_id_users"),
        "notes",
        "users",
        ["creator_id"],
        ["id"],
    )
    op.drop_column("notes", "owner_id")
    op.drop_column("notes", "file_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "notes",
        sa.Column(
            "file_id",
            sa.VARCHAR(length=128),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "notes",
        sa.Column("owner_id", sa.BIGINT(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(op.f("fk_notes_creator_id_users"), "notes", type_="foreignkey")
    op.create_foreign_key(
        "fk_notes_owner_id_users",
        "notes",
        "users",
        ["owner_id"],
        ["id"],
    )
    op.drop_column("notes", "document_id")
    op.drop_column("notes", "title")
    op.drop_column("notes", "creator_id")
    # ### end Alembic commands ###
